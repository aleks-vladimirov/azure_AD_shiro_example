# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
 
# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.
 
# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager


#------------------------------------------------------------------------
#  SessionManager
#------------------------------------------------------------------------
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

securityManager.sessionManager = $sessionManager
# 1800000 milliseconds = 30 min
securityManager.sessionManager.globalSessionTimeout = 1800000
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager

#------------------------------------------------------------------------
#  Authentication and Auhtorization logic
#------------------------------------------------------------------------


#https://localhost:8443/Shiro/
#https://localhost:8443/Shiro/private/
#https://localhost:8443/Shiro/basic/

#Configure Azure Factory
azureClientFactory=info.vladimirov.azure.filter.shiro.authentication.AzureAuthenticationClientFactory

# clientID: e1fc5f05-226f-4632-9a82-1dffb19ea9d9
# tenantID: a01e8494-5433-4996-8401-e1377aa1ddf6
# secretID: a6ee6905-e7e7-43d1-ba78-f0876dcadede
# SecretValue: b5v8Q~OKoy~KCkqJYLEpEKkvGP-TMoyuj9ZOTaWp
#28c8b7ac-f9a9-4f12-87c5-427d8c148923

#ClientID
azureClientFactory.clientId=e1fc5f05-226f-4632-9a82-1dffb19ea9d9
azureClientFactory.clientSecret=b5v8Q~OKoy~KCkqJYLEpEKkvGP-TMoyuj9ZOTaWp

#tenantID
azureClientFactory.authority=https://login.microsoftonline.com/a01e8494-5433-4996-8401-e1377aa1ddf6/
azureClientFactory.redirectUri=https://localhost:8443/Shiro/private/loginsuccess
azureClientFactory.scopes="api://e1fc5f05-226f-4632-9a82-1dffb19ea9d9/Access.Resource"

azure=info.vladimirov.azure.filter.shiro.filter.AzureAuthenticationFilter
azure.azureClientFactory=$azureClientFactory
azure.successUrl=/private/loginsuccess



#-------------------------------------------------------------------------
#   Realms
#-------------------------------------------------------------------------


azureCredentialMatcher = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher
azureADRealm = info.vladimirov.azure.filter.shiro.authentication.AzureRealm
azureADRealm.azureClientFactory = $azureClientFactory
azureADRealm.credentialsMatcher = $azureCredentialMatcher
azureADRealm.groupRolesMap = "user":"guest.1a2b3ccavladimirov.onmicrosoft.com", "admin":"admin"

securityManager.realms = $azureADRealm

# Caching
# also needed for permissionOnlyJbdcRealm
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $cacheManager


[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.

#username = <password>, <role1>, <role2>...
guest.1a2b3ccavladimirov.onmicrosoft.com = user, user
admin = admin, admin

[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.
user = *
admin = *


[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation

#authc - form authentication
**/api/**  = authcBasic

# /private/**  = authc

/private/**  = azure
# your login form page here:

/basic/**  = authcBasic
